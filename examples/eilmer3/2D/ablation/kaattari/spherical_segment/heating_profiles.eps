%!PS-Adobe-2.0 EPSF-2.0
%%Title: heating_profiles.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Oct 26 18:08:54 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 500 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (heating_profiles.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Daniel Potter)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Oct 26 18:08:54 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1220 640 M
7480 0 V
stroke
LTb
1220 640 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 1102 M
7480 0 V
stroke
LTb
1220 1102 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 1102 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 1564 M
7480 0 V
stroke
LTb
1220 1564 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 1564 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 2027 M
7480 0 V
stroke
LTb
1220 2027 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 2027 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.3)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 2489 M
7480 0 V
stroke
LTb
1220 2489 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 2489 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 2951 M
7480 0 V
stroke
LTb
1220 2951 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 2951 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 3413 M
7480 0 V
stroke
LTb
1220 3413 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 3413 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 3876 M
3817 0 V
3543 0 R
120 0 V
stroke
LTb
1220 3876 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 3876 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 4338 M
3817 0 V
3543 0 R
120 0 V
stroke
LTb
1220 4338 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 4338 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 4800 M
7480 0 V
stroke
LTb
1220 4800 M
63 0 V
7417 0 R
-63 0 V
stroke
1100 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.9)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 640 M
0 4160 V
stroke
LTb
1220 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1220 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2467 640 M
0 4160 V
stroke
LTb
2467 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2467 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3713 640 M
0 4160 V
stroke
LTb
3713 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3713 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4960 640 M
0 4160 V
stroke
LTb
4960 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4960 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6207 640 M
0 3097 V
0 1000 R
0 63 V
stroke
LTb
6207 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6207 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
7453 640 M
0 3097 V
0 1000 R
0 63 V
stroke
LTb
7453 640 M
0 63 V
0 4097 R
0 -63 V
stroke
7453 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8700 640 M
0 4160 V
stroke
LTb
8700 640 M
0 63 V
0 4097 R
0 -63 V
stroke
8700 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 12)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4800 N
0 -4160 V
7480 0 V
0 4160 V
-7480 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Heat transfer, q \(W/cm**2\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4960 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Distance along surface, s \(cm\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
4.000 UL
LT0
LTb
7797 4637 M
[ [(Helvetica) 200.0 0.0 true true 0 (mdot)]
[(Helvetica) 160.0 -60.0 true true 0 (w)]
[(Helvetica) 200.0 0.0 true true 0 (all/mdot)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (nf = 0.000)]
] -46.7 MRshow
LT0
7917 4637 M
543 0 V
1220 2969 M
191 184 V
191 240 V
190 232 V
191 143 V
191 152 V
191 57 V
190 103 V
191 35 V
191 123 V
191 118 V
190 179 V
191 -167 V
191 -411 V
191 -406 V
191 -280 V
190 -210 V
191 -54 V
191 -67 V
191 -116 V
190 -7 V
191 4 V
191 4 V
191 1 V
190 3 V
191 9 V
191 16 V
191 50 V
191 57 V
190 346 V
162 -265 V
132 -390 V
133 705 V
132 -650 V
132 -836 V
133 -564 V
134 -227 V
133 -52 V
133 -25 V
134 -36 V
1220 2969 Pls
1411 3153 Pls
1602 3393 Pls
1792 3625 Pls
1983 3768 Pls
2174 3920 Pls
2365 3977 Pls
2555 4080 Pls
2746 4115 Pls
2937 4238 Pls
3128 4356 Pls
3318 4535 Pls
3509 4368 Pls
3700 3957 Pls
3891 3551 Pls
4082 3271 Pls
4272 3061 Pls
4463 3007 Pls
4654 2940 Pls
4845 2824 Pls
5035 2817 Pls
5226 2821 Pls
5417 2825 Pls
5608 2826 Pls
5798 2829 Pls
5989 2838 Pls
6180 2854 Pls
6371 2904 Pls
6562 2961 Pls
6752 3307 Pls
6914 3042 Pls
7046 2652 Pls
7179 3357 Pls
7311 2707 Pls
7443 1871 Pls
7576 1307 Pls
7710 1080 Pls
7843 1028 Pls
7976 1003 Pls
8110 967 Pls
8188 4637 Pls
1.000 UP
4.000 UL
LT1
LTb
7797 4437 M
[ [(Helvetica) 200.0 0.0 true true 0 (mdot)]
[(Helvetica) 160.0 -60.0 true true 0 (w)]
[(Helvetica) 200.0 0.0 true true 0 (all/mdot)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (nf = 0.002)]
] -46.7 MRshow
LT1
7917 4437 M
543 0 V
1220 2115 M
191 122 V
191 147 V
190 146 V
191 182 V
191 32 V
191 63 V
190 -20 V
191 -64 V
191 -124 V
191 6 V
190 22 V
191 -8 V
191 -17 V
191 -22 V
191 -40 V
190 -64 V
191 -16 V
191 -10 V
191 -3 V
190 6 V
191 17 V
191 8 V
191 6 V
190 9 V
191 12 V
191 18 V
191 55 V
191 25 V
190 315 V
162 -176 V
132 -375 V
133 657 V
132 -508 V
132 -716 V
133 -522 V
134 -220 V
133 -51 V
133 -25 V
134 -32 V
1220 2115 Crs
1411 2237 Crs
1602 2384 Crs
1792 2530 Crs
1983 2712 Crs
2174 2744 Crs
2365 2807 Crs
2555 2787 Crs
2746 2723 Crs
2937 2599 Crs
3128 2605 Crs
3318 2627 Crs
3509 2619 Crs
3700 2602 Crs
3891 2580 Crs
4082 2540 Crs
4272 2476 Crs
4463 2460 Crs
4654 2450 Crs
4845 2447 Crs
5035 2453 Crs
5226 2470 Crs
5417 2478 Crs
5608 2484 Crs
5798 2493 Crs
5989 2505 Crs
6180 2523 Crs
6371 2578 Crs
6562 2603 Crs
6752 2918 Crs
6914 2742 Crs
7046 2367 Crs
7179 3024 Crs
7311 2516 Crs
7443 1800 Crs
7576 1278 Crs
7710 1058 Crs
7843 1007 Crs
7976 982 Crs
8110 950 Crs
8188 4437 Crs
1.000 UP
4.000 UL
LT2
LTb
7797 4237 M
[ [(Helvetica) 200.0 0.0 true true 0 (mdot)]
[(Helvetica) 160.0 -60.0 true true 0 (w)]
[(Helvetica) 200.0 0.0 true true 0 (all/mdot)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (nf = 0.009)]
] -46.7 MRshow
LT2
7917 4237 M
543 0 V
1220 1505 M
191 89 V
191 105 V
190 128 V
191 115 V
191 51 V
191 54 V
190 -17 V
191 -48 V
191 -96 V
191 0 V
190 10 V
191 -4 V
191 -11 V
191 -11 V
191 -17 V
190 -18 V
191 -9 V
191 -11 V
191 0 V
190 12 V
191 23 V
191 10 V
191 9 V
190 9 V
191 12 V
191 19 V
191 35 V
191 46 V
190 203 V
162 -57 V
132 -421 V
133 625 V
132 -236 V
132 -471 V
133 -420 V
134 -203 V
133 -50 V
133 -24 V
134 -27 V
1220 1505 Star
1411 1594 Star
1602 1699 Star
1792 1827 Star
1983 1942 Star
2174 1993 Star
2365 2047 Star
2555 2030 Star
2746 1982 Star
2937 1886 Star
3128 1886 Star
3318 1896 Star
3509 1892 Star
3700 1881 Star
3891 1870 Star
4082 1853 Star
4272 1835 Star
4463 1826 Star
4654 1815 Star
4845 1815 Star
5035 1827 Star
5226 1850 Star
5417 1860 Star
5608 1869 Star
5798 1878 Star
5989 1890 Star
6180 1909 Star
6371 1944 Star
6562 1990 Star
6752 2193 Star
6914 2136 Star
7046 1715 Star
7179 2340 Star
7311 2104 Star
7443 1633 Star
7576 1213 Star
7710 1010 Star
7843 960 Star
7976 936 Star
8110 909 Star
8188 4237 Star
2.000 UP
1.000 UL
LT1
LTb
7797 4037 M
[ [(Helvetica) 200.0 0.0 true true 0 (Kaattari: mdot* = 0.002)]
] -66.7 MRshow
LT1
1220 3293 Box
2323 2997 Box
2880 3067 Box
3432 2905 Box
3985 2766 Box
4265 2674 Box
4537 2674 Box
4822 2489 Box
5090 2443 Box
5378 2530 Box
6359 2466 Box
8188 4037 Box
2.000 UP
1.000 UL
LT2
LTb
7797 3837 M
[ [(Helvetica) 200.0 0.0 true true 0 (Kaattari: mdot* = 0.009)]
] -66.7 MRshow
LT2
1220 1906 BoxF
2323 1809 BoxF
3432 1264 BoxF
4265 1116 BoxF
4455 1024 BoxF
4826 1024 BoxF
5098 913 BoxF
5113 931 BoxF
5127 913 BoxF
5323 922 BoxF
5638 927 BoxF
5889 1001 BoxF
6196 1116 BoxF
8188 3837 BoxF
1.000 UL
LTb
1220 4800 N
0 -4160 V
7480 0 V
0 4160 V
-7480 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
