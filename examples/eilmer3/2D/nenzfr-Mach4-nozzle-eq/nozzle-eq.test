# nozzle-eq.test
# Functional test for axisymmetric T4 Mach 4 nozzle flow,
# single-threaded (block-sequencing) version.
# The condition tested is that of Rainer's 5MJ/kg nozzle 
# survey conducted in 2007 (Shots 9459 - 9462).
#
# Peter Jacobs, Luke Doherty and Wilson Chan, 19-Oct-2011

package require tcltest 2.0
namespace import ::tcltest::*
configure -verbose {start body error}

test nenzfr {Prepare and run nenzfr.} -body {
    exec nenzfr.py --config_file=nenzfr-Mach4-nozzle-eq.cfg  > LOGFILE_MAIN
} -result {} -returnCodes {0}

proc is_within_tolerance {v v_ref tol} {
    return [expr abs($v - $v_ref) < ($tol * $v_ref)]
}

proc extract_value {line} {
    # Split line ..
    set tmp [split $line]
    # .. and remove all unnecessary spaces ..
    set tmp2 [regsub -all ({}\ )+ $tmp ""]
    # .. and return the variable value.
    return [lindex [split $tmp2] 1]
}

test nozzle-exit-condition {The nozzle exit conditions 1255K, 2962m/s, 0.239kg/m**3.} -body {
    # The reference values were extracted from the solution data file nozzle-exit.stats
    # as it was computed on mango.eait.uq.edu.au on 14-Apr-2012.
    #
    # We'll check the data in each of the exit-plane statistics files.
    set result_flags {}
    foreach ending {stats statsArea statsMass} {
        set fp [open nozzle-exit.$ending r]
        set contents [read $fp]
        close $fp  
        #  
        # Searches lines for variable name and variable value.
        set temperature 0
        set velocity 0
        set density 0
        foreach line [split $contents "\n"] {
	    if {[string first "T" $line] >= 0} {
	        set temperature [extract_value $line]
	    }
	    if {[string first "vel.x" $line] >= 0} {
	        set velocity [extract_value $line]
	    }
	    if {[string first "rho" $line] >= 0} {
	        set density [extract_value $line]
	    }
        }
        # The values should be within 5% of those expected.
        lappend result_flags [is_within_tolerance $temperature 1255 0.05] \
            [is_within_tolerance $velocity 2962 0.05] \
            [is_within_tolerance $density 0.239 0.05]
    }
    set result_flags
} -result {1 1 1 1 1 1 1 1 1}


cleanupTests
