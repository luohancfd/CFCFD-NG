%!PS-Adobe-2.0 EPSF-2.0
%%Title: sod_p.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Apr  8 11:22:03 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sod_p.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (peterj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr  8 11:22:03 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1340 640 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1340 1273 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 1273 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20000)]
] -66.7 MRshow
1.000 UL
LTb
1340 1906 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 1906 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 40000)]
] -66.7 MRshow
1.000 UL
LTb
1340 2539 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 2539 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 60000)]
] -66.7 MRshow
1.000 UL
LTb
1340 3173 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 3173 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 80000)]
] -66.7 MRshow
1.000 UL
LTb
1340 3806 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 3806 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100000)]
] -66.7 MRshow
1.000 UL
LTb
1340 4439 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 4439 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 120000)]
] -66.7 MRshow
1.000 UL
LTb
1340 640 M
0 63 V
0 3736 R
0 -63 V
stroke
1340 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
2440 640 M
0 63 V
0 3736 R
0 -63 V
stroke
2440 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
3540 640 M
0 63 V
0 3736 R
0 -63 V
stroke
3540 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MCshow
1.000 UL
LTb
4639 640 M
0 63 V
0 3736 R
0 -63 V
stroke
4639 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MCshow
1.000 UL
LTb
5739 640 M
0 63 V
0 3736 R
0 -63 V
stroke
5739 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MCshow
1.000 UL
LTb
6839 640 M
0 63 V
0 3736 R
0 -63 V
stroke
6839 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1340 4439 N
0 -3799 V
5499 0 V
0 3799 V
-5499 0 V
Z stroke
LCb setrgbcolor
160 2539 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Pressure, Pa)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4089 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (x, m)]
] -66.7 MCshow
LTb
4089 4739 M
[ [(Helvetica) 200.0 0.0 true true 0 (One-D Shock Tube at t = 0.6ms)]
] -66.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
5936 4276 M
[ [(Helvetica) 200.0 0.0 true true 0 (simulation)]
] -66.7 MRshow
LT0
1367 3806 Crs
1422 3806 Crs
1477 3806 Crs
1532 3806 Crs
1587 3806 Crs
1642 3806 Crs
1697 3806 Crs
1752 3806 Crs
1807 3806 Crs
1862 3806 Crs
1917 3806 Crs
1972 3806 Crs
2027 3806 Crs
2082 3806 Crs
2137 3806 Crs
2192 3806 Crs
2247 3806 Crs
2302 3806 Crs
2357 3805 Crs
2412 3805 Crs
2467 3803 Crs
2522 3800 Crs
2577 3794 Crs
2632 3783 Crs
2687 3763 Crs
2742 3730 Crs
2797 3681 Crs
2852 3612 Crs
2907 3525 Crs
2962 3422 Crs
3017 3311 Crs
3072 3195 Crs
3127 3078 Crs
3182 2961 Crs
3237 2847 Crs
3292 2736 Crs
3347 2627 Crs
3402 2523 Crs
3457 2423 Crs
3512 2327 Crs
3567 2236 Crs
3622 2148 Crs
3677 2065 Crs
3732 1985 Crs
3787 1909 Crs
3842 1836 Crs
3897 1767 Crs
3952 1704 Crs
4007 1649 Crs
4062 1613 Crs
4117 1599 Crs
4172 1598 Crs
4227 1600 Crs
4282 1600 Crs
4337 1600 Crs
4392 1600 Crs
4447 1600 Crs
4502 1600 Crs
4557 1600 Crs
4612 1600 Crs
4667 1600 Crs
4722 1600 Crs
4777 1599 Crs
4832 1600 Crs
4887 1601 Crs
4942 1603 Crs
4997 1606 Crs
5052 1604 Crs
5107 1604 Crs
5162 1602 Crs
5217 1599 Crs
5272 1598 Crs
5327 1596 Crs
5382 1597 Crs
5437 1596 Crs
5492 1600 Crs
5547 1583 Crs
5602 1616 Crs
5657 1534 Crs
5712 1634 Crs
5767 1446 Crs
5822 1597 Crs
5877 1347 Crs
5932 1439 Crs
5987 1200 Crs
6042 1128 Crs
6097 977 Crs
6152 960 Crs
6207 957 Crs
6262 957 Crs
6317 957 Crs
6372 957 Crs
6427 957 Crs
6482 957 Crs
6537 957 Crs
6592 957 Crs
6647 957 Crs
6702 957 Crs
6757 957 Crs
6812 957 Crs
6327 4276 Crs
% End plot #1
% Begin plot #2
1.000 UL
LT0
LCb setrgbcolor
5936 4076 M
[ [(Helvetica) 200.0 0.0 true true 0 (exact)]
] -66.7 MRshow
LT0
6056 4076 M
543 0 V
1340 3806 M
1515 0 V
2 -8 V
3 -7 V
2 -7 V
3 -8 V
2 -7 V
3 -7 V
2 -8 V
3 -7 V
2 -7 V
3 -8 V
2 -7 V
3 -7 V
2 -8 V
3 -7 V
2 -7 V
3 -8 V
2 -7 V
3 -8 V
3 -7 V
2 -7 V
3 -8 V
2 -7 V
3 -7 V
2 -8 V
3 -7 V
3 -7 V
2 -8 V
3 -7 V
2 -7 V
3 -8 V
3 -7 V
2 -7 V
3 -8 V
3 -7 V
2 -8 V
3 -7 V
2 -7 V
3 -8 V
3 -7 V
2 -7 V
3 -8 V
3 -7 V
2 -7 V
3 -8 V
3 -7 V
3 -7 V
2 -8 V
3 -7 V
3 -8 V
2 -7 V
3 -7 V
3 -8 V
3 -7 V
2 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
2 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
2 -8 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
2 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
2 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -8 V
4 -7 V
stroke 3133 3063 M
3 -7 V
3 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -7 V
4 -8 V
3 -7 V
3 -7 V
3 -8 V
3 -7 V
3 -8 V
4 -7 V
3 -7 V
3 -8 V
3 -7 V
4 -7 V
3 -8 V
3 -7 V
3 -7 V
4 -8 V
3 -7 V
3 -7 V
3 -8 V
4 -7 V
3 -7 V
3 -8 V
4 -7 V
3 -8 V
3 -7 V
4 -7 V
3 -8 V
4 -7 V
3 -7 V
3 -8 V
4 -7 V
3 -7 V
4 -8 V
3 -7 V
4 -7 V
3 -8 V
4 -7 V
3 -7 V
4 -8 V
3 -7 V
4 -8 V
3 -7 V
4 -7 V
3 -8 V
4 -7 V
3 -7 V
4 -8 V
4 -7 V
3 -7 V
4 -8 V
3 -7 V
4 -7 V
4 -8 V
3 -7 V
4 -8 V
4 -7 V
3 -7 V
4 -8 V
4 -7 V
4 -7 V
3 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
3 -7 V
4 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
3 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
4 -7 V
4 -8 V
5 -7 V
4 -8 V
4 -7 V
4 -7 V
4 -8 V
4 -7 V
5 -7 V
4 -8 V
4 -7 V
4 -7 V
5 -8 V
stroke 3509 2298 M
4 -7 V
4 -7 V
4 -8 V
5 -7 V
4 -7 V
5 -8 V
4 -7 V
4 -8 V
5 -7 V
4 -7 V
5 -8 V
4 -7 V
5 -7 V
4 -8 V
5 -7 V
4 -7 V
5 -8 V
4 -7 V
5 -7 V
5 -8 V
4 -7 V
5 -8 V
5 -7 V
4 -7 V
5 -8 V
5 -7 V
4 -7 V
5 -8 V
5 -7 V
5 -7 V
5 -8 V
5 -7 V
5 -7 V
4 -8 V
5 -7 V
5 -7 V
5 -8 V
5 -7 V
5 -8 V
5 -7 V
5 -7 V
6 -8 V
5 -7 V
5 -7 V
5 -8 V
5 -7 V
5 -7 V
6 -8 V
5 -7 V
5 -7 V
5 -8 V
6 -7 V
5 -7 V
6 -8 V
5 -7 V
5 -8 V
6 -7 V
5 -7 V
6 -8 V
6 -7 V
5 -7 V
6 -8 V
5 -7 V
6 -7 V
6 -8 V
6 -7 V
5 -7 V
6 -8 V
6 -7 V
6 -7 V
6 -8 V
6 -7 V
6 -8 V
6 -7 V
6 -7 V
6 -8 V
6 -7 V
6 -7 V
6 -8 V
6 -7 V
7 -7 V
6 -8 V
6 -7 V
7 -7 V
6 -8 V
6 -7 V
7 -8 V
6 -7 V
7 -7 V
7 -8 V
6 -7 V
7 -7 V
7 -8 V
6 -7 V
7 -7 V
1041 0 V
861 0 V
0 -643 V
921 0 V
% End plot #2
stroke
LTb
1340 4439 N
0 -3799 V
5499 0 V
0 3799 V
-5499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
