# cone20.test
# Functional test for a conical (axisymmetric), inviscid flow.
#
# This exercises quite a few of the basic functions of the 2D code.
#
# PJ, 11-Jan-2011
# Note that later tests below depend on earlier ones,
# just as we shouldn't do.  Should fix this some day.

package require tcltest 2.0
namespace import ::tcltest::*
configure -verbose {start body error}

test run-preprocessor {Run the preprocessing stage.} -body {
    exec e3prep.py --job=cone20 > LOGFILE_PREP
} -result {} -returnCodes {0}

test run-simulation {Run the shared-memory simulation code.} -body {
    exec e3shared.exe --job=cone20 --run --verbosity=1 > LOGFILE_MAIN
} -result {} -returnCodes {0}

test number-of-steps {The main simulation takes a certain number of steps.} -body {
    set fp [open LOGFILE_MAIN r]
    set contents [read $fp]
    close $fp
    set final_steps 0
    foreach line [split $contents "\n"] {
	if {[string first "Total number of steps" $line] >= 0} {
	    set final_steps [lindex [split $line] 5]
	}
    }
    list [expr abs($final_steps - 862) < 3]
} -result {1}

test shock-angle {The shock angle should be close to 49 degrees.} -body {
    set shock_angle 0
    set average_deviation 0
    if { [catch {exec /usr/bin/env python estimate_shock_angle.py} results] } {
        puts "specialized postprocessing command failed"
        puts $results
    } else {
	foreach line [split $results "\n"] {
	    if {[string first shock_angle_deg $line] >= 0} {
		set shock_angle [lindex [split $line] 1]
	    }
	    if {[string first average_deviation_metres $line] >= 0} {
		set average_deviation [lindex [split $line] 1]
	    }
	}
    }
    # The shock wave angle should be within 1 degree of expected
    # and average deviation of points should be less than 2mm. 
    list [expr abs($shock_angle - 49.68599) < 1.0] [expr $average_deviation < 0.002]
} -result {1 1}

cleanupTests
