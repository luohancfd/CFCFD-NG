-- Author: Peter Blyton
-- Adapted from Rowan's ideal_gas.lua
-- Date: 15-May-2012

module(..., package.seeall)

function serialise(o, f, indent)
   indent = indent or ""
   if type(o) == "number" then
      f:write(o)
   elseif type(o) == "string" then
      f:write(string.format("%q", o))
   elseif type(o) == "table" then
      local old_indent = indent
      indent = indent.."  "
      f:write("{\n")
      for k,v in pairs(o) do
         if type(k) == "string" then
            f:write(string.format("%s%s = ", indent, k))
         else
            f:write(string.format("%s", indent))
         end
         serialise(v, f, indent)
         f:write(",\n")
      end
      indent = old_indent
      f:write(string.format("%s}", indent))
   else
      error("cannot serialise a " .. type(o))
   end
end

function list_available_species()
   fluid_dir = os.getenv("HOME").."/e3bin/species/refprop"
   tmpname = os.tmpname()
   str1 = string.format("find %s -type f ", fluid_dir)
   str2 = "-printf '%f\n' "
   str3 = string.format("> %s", tmpname)
   os.execute(str1 .. str2 .. str3)
   tmpfile = assert(io.open(tmpname, "r"))
   species = {}
   for line in tmpfile:lines() do
      species[line] = true
   end
   tmpfile:close()
   os.execute(string.format("rm %s", tmpname))
   return species
end

function create_real_gas_REFPROP(species, f)
   species_avail = list_available_species()
   f:write(string.format("-- Auto-generated by gasfile on: %s\n",
                         os.date("%d-%b-%Y %X")))
   f:write("model = 'REFPROP'\n")
   if (table.getn(species) == 1) then
      print("Selected 'two phase' REFPROP calculations by default.")
      species[2] = "two phase"
   end
   if not (table.getn(species) == 2) then
      print("Incorrect number of species provided.")
      print("This gas model must be created by specifying a single fluid")
      print("or single mixture file for REFPROP, and optionally specifying")
      print("'single phase' or 'two phase' as the second species item.\n")
      print("Bailing out!\n")
      os.exit(1)
   end
   f:write("species = {")
   sp = species[1]
   if not species_avail[sp] then
      print(string.format("Species: %s is not implemented for this gas model.\n", sp))
      print("Check for an appropriate .FLD, .PPF or .MIX file in:\n")
      dir = os.getenv("HOME").."/e3bin/species/refprop"
      print("   ", dir, "\n")
      print("Bailing out!\n")
      os.exit(1)
   end
   f:write(string.format("'%s', ", sp))
   sp = species[2]
   if not (sp == "single phase" or sp == "two phase") then
      print("Incorrect value provided as second species item.")
      print("The available options are 'single phase' or 'two phase'.\n")
      print("Bailing out!\n")
      os.exit(1)
   end
   f:write(string.format("'%s', ", sp))
   f:write("}\n")
   f:write("\n")
end
