%!PS-Adobe-2.0 EPSF-2.0
%%Title: sod_temperature.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Dec 20 10:51:00 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 553 402
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
9128 0 V
1.000 UL
LTb
714 420 M
63 0 V
9065 0 R
-63 0 V
stroke
630 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 1498 M
9128 0 V
1.000 UL
LTb
714 1498 M
63 0 V
9065 0 R
-63 0 V
stroke
630 1498 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 2576 M
9128 0 V
1.000 UL
LTb
714 2576 M
63 0 V
9065 0 R
-63 0 V
stroke
630 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 3654 M
9128 0 V
1.000 UL
LTb
714 3654 M
63 0 V
9065 0 R
-63 0 V
stroke
630 3654 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 350)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 4732 M
9128 0 V
1.000 UL
LTb
714 4732 M
63 0 V
9065 0 R
-63 0 V
stroke
630 4732 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 5810 M
9128 0 V
1.000 UL
LTb
714 5810 M
63 0 V
9065 0 R
-63 0 V
stroke
630 5810 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 450)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 6888 M
9128 0 V
1.000 UL
LTb
714 6888 M
63 0 V
9065 0 R
-63 0 V
stroke
630 6888 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 6468 V
1.000 UL
LTb
714 420 M
0 63 V
0 6405 R
0 -63 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2540 420 M
0 6468 V
1.000 UL
LTb
2540 420 M
0 63 V
0 6405 R
0 -63 V
stroke
2540 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4365 420 M
0 6468 V
1.000 UL
LTb
4365 420 M
0 63 V
0 6405 R
0 -63 V
stroke
4365 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6191 420 M
0 6468 V
1.000 UL
LTb
6191 420 M
0 63 V
0 6405 R
0 -63 V
stroke
6191 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8016 420 M
0 5985 V
0 420 R
0 63 V
1.000 UL
LTb
8016 420 M
0 63 V
0 6405 R
0 -63 V
stroke
8016 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
9842 420 M
0 6468 V
1.000 UL
LTb
9842 420 M
0 63 V
0 6405 R
0 -63 V
stroke
9842 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 420 M
9128 0 V
0 6468 V
-9128 0 V
714 420 L
LTb
140 3654 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Arial) 160.0 0.0 true true 0 (Temperature, T \(K\))]
] -53.3 MCshow
grestore
LTb
5278 70 M
[ [(Arial) 160.0 0.0 true true 0 (Axial location, x \(m\))]
] -53.3 MCshow
1.000 UP
3.000 UL
LT0
LTb
9191 6755 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact solution)]
] -46.7 MRshow
LT0
9275 6755 M
399 0 V
714 3620 M
2515 0 V
4 -5 V
4 -5 V
4 -5 V
4 -5 V
4 -5 V
4 -5 V
5 -5 V
4 -5 V
4 -5 V
4 -5 V
4 -5 V
4 -5 V
5 -5 V
4 -5 V
4 -6 V
4 -5 V
4 -5 V
5 -5 V
4 -5 V
4 -5 V
4 -5 V
5 -6 V
4 -5 V
4 -5 V
4 -5 V
5 -5 V
4 -6 V
4 -5 V
5 -5 V
4 -5 V
4 -6 V
5 -5 V
4 -5 V
4 -5 V
5 -6 V
4 -5 V
5 -5 V
4 -6 V
4 -5 V
5 -5 V
4 -6 V
5 -5 V
4 -5 V
5 -6 V
4 -5 V
5 -5 V
4 -6 V
5 -5 V
4 -6 V
5 -5 V
4 -6 V
5 -5 V
4 -6 V
5 -5 V
5 -6 V
4 -5 V
5 -6 V
4 -5 V
5 -6 V
5 -5 V
4 -6 V
5 -5 V
5 -6 V
4 -5 V
5 -6 V
5 -6 V
4 -5 V
5 -6 V
5 -6 V
5 -5 V
4 -6 V
5 -6 V
5 -5 V
5 -6 V
4 -6 V
5 -5 V
5 -6 V
5 -6 V
5 -6 V
5 -5 V
5 -6 V
4 -6 V
5 -6 V
5 -6 V
5 -5 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -5 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
5 -6 V
6 -6 V
stroke
3690 3068 M
5 -6 V
5 -6 V
5 -6 V
5 -7 V
5 -6 V
6 -6 V
5 -6 V
5 -6 V
5 -6 V
6 -6 V
5 -6 V
5 -7 V
5 -6 V
6 -6 V
5 -6 V
5 -7 V
6 -6 V
5 -6 V
6 -6 V
5 -7 V
5 -6 V
6 -6 V
5 -7 V
6 -6 V
5 -6 V
6 -7 V
5 -6 V
6 -7 V
5 -6 V
6 -7 V
5 -6 V
6 -7 V
6 -6 V
5 -7 V
6 -6 V
6 -7 V
5 -6 V
6 -7 V
6 -6 V
5 -7 V
6 -7 V
6 -6 V
6 -7 V
5 -7 V
6 -6 V
6 -7 V
6 -7 V
6 -6 V
6 -7 V
6 -7 V
5 -7 V
6 -7 V
6 -6 V
6 -7 V
6 -7 V
6 -7 V
6 -7 V
6 -7 V
6 -7 V
7 -7 V
6 -7 V
6 -7 V
6 -7 V
6 -7 V
6 -7 V
6 -7 V
7 -7 V
6 -7 V
6 -7 V
7 -7 V
6 -8 V
6 -7 V
6 -7 V
7 -7 V
6 -7 V
7 -8 V
6 -7 V
7 -7 V
6 -8 V
7 -7 V
6 -7 V
7 -8 V
6 -7 V
7 -8 V
6 -7 V
7 -7 V
7 -8 V
6 -8 V
7 -7 V
7 -8 V
7 -7 V
6 -8 V
7 -7 V
7 -8 V
7 -8 V
7 -8 V
7 -7 V
7 -8 V
7 -8 V
6 -8 V
8 -7 V
7 -8 V
7 -8 V
7 -8 V
stroke
4314 2353 M
7 -8 V
7 -8 V
7 -8 V
7 -8 V
8 -8 V
7 -8 V
7 -8 V
7 -8 V
8 -8 V
7 -8 V
7 -9 V
8 -8 V
7 -8 V
8 -8 V
7 -9 V
8 -8 V
8 -8 V
7 -9 V
8 -8 V
7 -9 V
8 -8 V
8 -9 V
8 -8 V
7 -9 V
8 -8 V
8 -9 V
8 -8 V
8 -9 V
8 -9 V
8 -9 V
8 -8 V
8 -9 V
8 -9 V
8 -9 V
9 -9 V
8 -9 V
8 -9 V
8 -9 V
9 -9 V
8 -9 V
9 -9 V
8 -9 V
8 -9 V
9 -10 V
9 -9 V
8 -9 V
9 -9 V
9 -10 V
8 -9 V
9 -10 V
9 -9 V
9 -10 V
9 -9 V
9 -10 V
9 -9 V
9 -10 V
9 -10 V
9 -10 V
9 -9 V
9 -10 V
10 -10 V
9 -10 V
9 -10 V
10 -10 V
9 -10 V
10 -10 V
9 -10 V
10 -11 V
10 -10 V
9 -10 V
10 -11 V
10 -10 V
10 -10 V
10 -11 V
10 -10 V
10 -11 V
10 -11 V
10 -10 V
11 -11 V
10 -11 V
10 -11 V
11 -11 V
10 -11 V
11 -11 V
10 -11 V
11 -11 V
11 -11 V
11 -11 V
10 -11 V
11 -12 V
11 -11 V
12 -12 V
11 -11 V
11 -12 V
11 0 V
1728 0 V
0 3222 V
1429 0 V
0 -2565 V
1529 0 V
1.000 UP
1.000 UL
LT1
LTb
9191 6615 M
[ [(Helvetica) 140.0 0.0 true true 0 (L1d solution sans RSP)]
] -46.7 MRshow
LT1
752 3620 Pls
829 3620 Pls
905 3620 Pls
981 3620 Pls
1057 3620 Pls
1133 3620 Pls
1209 3620 Pls
1285 3620 Pls
1360 3620 Pls
1435 3620 Pls
1510 3620 Pls
1584 3620 Pls
1658 3620 Pls
1731 3620 Pls
1804 3620 Pls
1877 3620 Pls
1949 3620 Pls
2021 3620 Pls
2092 3620 Pls
2162 3620 Pls
2232 3620 Pls
2301 3620 Pls
2369 3620 Pls
2437 3619 Pls
2504 3619 Pls
2570 3619 Pls
2636 3619 Pls
2701 3619 Pls
2765 3618 Pls
2828 3617 Pls
2891 3615 Pls
2953 3610 Pls
3014 3602 Pls
3074 3589 Pls
3134 3570 Pls
3193 3542 Pls
3253 3506 Pls
3312 3461 Pls
3371 3408 Pls
3431 3350 Pls
3490 3287 Pls
3550 3220 Pls
3611 3152 Pls
3672 3083 Pls
3733 3013 Pls
3795 2943 Pls
3857 2873 Pls
3920 2802 Pls
3983 2731 Pls
4047 2660 Pls
4111 2589 Pls
4176 2518 Pls
4241 2446 Pls
4307 2375 Pls
4373 2303 Pls
4440 2231 Pls
4508 2159 Pls
4576 2088 Pls
4645 2016 Pls
4714 1945 Pls
4784 1875 Pls
4854 1807 Pls
4925 1742 Pls
4997 1680 Pls
5068 1625 Pls
5140 1577 Pls
5212 1538 Pls
5282 1508 Pls
5353 1487 Pls
5422 1474 Pls
5490 1466 Pls
5556 1462 Pls
5621 1461 Pls
5684 1460 Pls
5746 1461 Pls
5806 1461 Pls
5865 1461 Pls
5922 1462 Pls
5978 1462 Pls
6033 1463 Pls
6086 1463 Pls
6138 1464 Pls
6189 1465 Pls
6238 1465 Pls
6286 1466 Pls
6333 1467 Pls
6378 1468 Pls
6423 1469 Pls
6466 1471 Pls
6508 1473 Pls
6549 1475 Pls
6589 1477 Pls
6628 1481 Pls
6666 1485 Pls
6703 1491 Pls
6739 1500 Pls
6774 1511 Pls
6808 1531 Pls
6842 1573 Pls
6876 2037 Pls
6905 5335 Pls
6927 4817 Pls
6949 4754 Pls
6970 4731 Pls
6992 4719 Pls
7014 4714 Pls
7035 4707 Pls
7057 4703 Pls
7078 4700 Pls
7100 4697 Pls
7121 4694 Pls
7143 4692 Pls
7164 4690 Pls
7186 4688 Pls
7207 4687 Pls
7229 4686 Pls
7250 4685 Pls
7272 4685 Pls
7293 4684 Pls
7315 4684 Pls
7336 4684 Pls
7358 4684 Pls
7379 4684 Pls
7401 4684 Pls
7422 4683 Pls
7444 4683 Pls
7465 4683 Pls
7486 4683 Pls
7508 4683 Pls
7529 4682 Pls
7551 4682 Pls
7572 4682 Pls
7594 4682 Pls
7615 4682 Pls
7637 4683 Pls
7658 4683 Pls
7680 4683 Pls
7701 4683 Pls
7723 4684 Pls
7744 4683 Pls
7766 4683 Pls
7787 4683 Pls
7809 4683 Pls
7830 4683 Pls
7852 4683 Pls
7873 4682 Pls
7895 4682 Pls
7916 4682 Pls
7937 4682 Pls
7959 4683 Pls
7980 4683 Pls
8002 4683 Pls
8023 4683 Pls
8045 4683 Pls
8066 4683 Pls
8088 4683 Pls
8109 4683 Pls
8131 4682 Pls
8152 4682 Pls
8174 4682 Pls
8195 4682 Pls
8217 4681 Pls
8238 4678 Pls
8260 4667 Pls
8281 4617 Pls
8304 4404 Pls
8330 3664 Pls
8364 2572 Pls
8406 2206 Pls
8450 2133 Pls
8496 2120 Pls
8541 2117 Pls
8587 2117 Pls
8633 2117 Pls
8678 2117 Pls
8724 2117 Pls
8769 2117 Pls
8815 2117 Pls
8861 2117 Pls
8906 2117 Pls
8952 2117 Pls
8998 2117 Pls
9043 2117 Pls
9089 2117 Pls
9135 2117 Pls
9180 2117 Pls
9226 2117 Pls
9272 2117 Pls
9317 2117 Pls
9363 2117 Pls
9408 2117 Pls
9454 2117 Pls
9500 2117 Pls
9545 2117 Pls
9591 2117 Pls
9637 2117 Pls
9682 2117 Pls
9728 2117 Pls
9774 2117 Pls
9819 2117 Pls
9474 6615 Pls
1.000 UP
1.000 UL
LT2
LTb
9191 6475 M
[ [(Helvetica) 140.0 0.0 true true 0 (L1d solution with RSP_dt = 0.05 ms)]
] -46.7 MRshow
LT2
752 3620 Crs
829 3620 Crs
905 3620 Crs
981 3620 Crs
1057 3620 Crs
1133 3620 Crs
1209 3620 Crs
1285 3620 Crs
1360 3620 Crs
1435 3620 Crs
1510 3620 Crs
1584 3620 Crs
1658 3620 Crs
1731 3620 Crs
1804 3620 Crs
1877 3620 Crs
1949 3620 Crs
2021 3620 Crs
2092 3620 Crs
2162 3620 Crs
2232 3620 Crs
2301 3620 Crs
2369 3620 Crs
2437 3619 Crs
2504 3619 Crs
2570 3619 Crs
2636 3619 Crs
2701 3619 Crs
2765 3619 Crs
2828 3618 Crs
2891 3617 Crs
2952 3614 Crs
3013 3609 Crs
3074 3599 Crs
3133 3584 Crs
3193 3562 Crs
3251 3531 Crs
3310 3491 Crs
3369 3442 Crs
3427 3385 Crs
3486 3322 Crs
3546 3255 Crs
3605 3185 Crs
3665 3113 Crs
3726 3041 Crs
3787 2969 Crs
3849 2896 Crs
3911 2823 Crs
3974 2750 Crs
4037 2676 Crs
4101 2603 Crs
4166 2529 Crs
4231 2455 Crs
4297 2380 Crs
4363 2306 Crs
4430 2231 Crs
4497 2157 Crs
4566 2082 Crs
4634 2008 Crs
4704 1934 Crs
4774 1863 Crs
4845 1793 Crs
4917 1727 Crs
4989 1666 Crs
5061 1611 Crs
5133 1564 Crs
5205 1527 Crs
5276 1499 Crs
5347 1480 Crs
5416 1469 Crs
5484 1463 Crs
5550 1460 Crs
5615 1460 Crs
5679 1460 Crs
5741 1461 Crs
5801 1462 Crs
5860 1462 Crs
5917 1463 Crs
5973 1464 Crs
6028 1465 Crs
6081 1466 Crs
6133 1466 Crs
6184 1467 Crs
6233 1468 Crs
6281 1470 Crs
6328 1471 Crs
6373 1473 Crs
6418 1476 Crs
6461 1480 Crs
6503 1479 Crs
6544 1476 Crs
6584 1476 Crs
6623 1476 Crs
6661 1475 Crs
6698 1471 Crs
6734 1451 Crs
6768 1450 Crs
6802 1450 Crs
6835 1450 Crs
6867 1450 Crs
6893 4682 Crs
6915 4682 Crs
6936 4682 Crs
6958 4682 Crs
6979 4682 Crs
7001 4685 Crs
7023 4928 Crs
7045 4788 Crs
7066 4743 Crs
7088 4722 Crs
7109 4708 Crs
7131 4699 Crs
7152 4693 Crs
7174 4690 Crs
7195 4688 Crs
7217 4687 Crs
7238 4686 Crs
7260 4686 Crs
7281 4685 Crs
7303 4685 Crs
7324 4684 Crs
7346 4684 Crs
7367 4684 Crs
7389 4684 Crs
7410 4684 Crs
7432 4684 Crs
7453 4685 Crs
7475 4685 Crs
7496 4686 Crs
7518 4686 Crs
7539 4686 Crs
7561 4687 Crs
7582 4687 Crs
7604 4686 Crs
7625 4686 Crs
7647 4686 Crs
7668 4686 Crs
7690 4685 Crs
7711 4685 Crs
7733 4685 Crs
7754 4685 Crs
7776 4685 Crs
7797 4685 Crs
7818 4685 Crs
7840 4685 Crs
7861 4685 Crs
7883 4685 Crs
7904 4685 Crs
7926 4685 Crs
7947 4684 Crs
7969 4684 Crs
7990 4684 Crs
8012 4683 Crs
8033 4683 Crs
8055 4683 Crs
8076 4683 Crs
8098 4683 Crs
8119 4683 Crs
8141 4683 Crs
8162 4683 Crs
8184 4683 Crs
8205 4682 Crs
8227 4676 Crs
8248 4652 Crs
8270 4548 Crs
8294 4155 Crs
8323 3078 Crs
8361 2332 Crs
8405 2157 Crs
8450 2124 Crs
8496 2118 Crs
8541 2117 Crs
8587 2117 Crs
8633 2117 Crs
8678 2117 Crs
8724 2117 Crs
8769 2117 Crs
8815 2117 Crs
8861 2117 Crs
8906 2117 Crs
8952 2117 Crs
8998 2117 Crs
9043 2117 Crs
9089 2117 Crs
9135 2117 Crs
9180 2117 Crs
9226 2117 Crs
9272 2117 Crs
9317 2117 Crs
9363 2117 Crs
9408 2117 Crs
9454 2117 Crs
9500 2117 Crs
9545 2117 Crs
9591 2117 Crs
9637 2117 Crs
9682 2117 Crs
9728 2117 Crs
9774 2117 Crs
9819 2117 Crs
9474 6475 Crs
1.000 UL
LTb
714 420 M
9128 0 V
0 6468 V
-9128 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial Helvetica
