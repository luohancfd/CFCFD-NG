%!PS-Adobe-2.0 EPSF-2.0
%%Title: he_temperature_detail.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Dec 20 10:51:39 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 553 402
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 1407 M
8960 0 V
1.000 UL
LTb
882 1407 M
63 0 V
8897 0 R
-63 0 V
stroke
798 1407 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 2503 M
8960 0 V
1.000 UL
LTb
882 2503 M
63 0 V
8897 0 R
-63 0 V
stroke
798 2503 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 3599 M
8960 0 V
1.000 UL
LTb
882 3599 M
63 0 V
8897 0 R
-63 0 V
stroke
798 3599 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 4695 M
8960 0 V
1.000 UL
LTb
882 4695 M
63 0 V
8897 0 R
-63 0 V
stroke
798 4695 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 5792 M
8960 0 V
1.000 UL
LTb
882 5792 M
63 0 V
8897 0 R
-63 0 V
stroke
798 5792 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 6888 M
8960 0 V
1.000 UL
LTb
882 6888 M
63 0 V
8897 0 R
-63 0 V
stroke
798 6888 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 420 M
0 6468 V
1.000 UL
LTb
882 420 M
0 63 V
0 6405 R
0 -63 V
stroke
882 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2674 420 M
0 5985 V
0 420 R
0 63 V
1.000 UL
LTb
2674 420 M
0 63 V
0 6405 R
0 -63 V
stroke
2674 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4466 420 M
0 5985 V
0 420 R
0 63 V
1.000 UL
LTb
4466 420 M
0 63 V
0 6405 R
0 -63 V
stroke
4466 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6258 420 M
0 6468 V
1.000 UL
LTb
6258 420 M
0 63 V
0 6405 R
0 -63 V
stroke
6258 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8050 420 M
0 6468 V
1.000 UL
LTb
8050 420 M
0 63 V
0 6405 R
0 -63 V
stroke
8050 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
9842 420 M
0 6468 V
1.000 UL
LTb
9842 420 M
0 63 V
0 6405 R
0 -63 V
stroke
9842 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.95)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 420 M
8960 0 V
0 6468 V
-8960 0 V
882 420 L
LTb
140 3654 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Arial) 160.0 0.0 true true 0 (Temperature, T \(K\))]
] -53.3 MCshow
grestore
LTb
5362 70 M
[ [(Arial) 160.0 0.0 true true 0 (Axial location, x \(m\))]
] -53.3 MCshow
1.000 UP
LTb
4824 6011 M
[ [(Helvetica) 140.0 0.0 true true 0 (Erroneous temperature)]
] -46.7 MRshow
3.000 UL
LTb
5290 6264 M
72 103 V
-114 -53 V
5004 6066 M
358 301 V
3.000 UL
LT0
LTb
4494 6755 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact solution)]
] -46.7 MRshow
LT0
4578 6755 M
399 0 V
882 1292 M
300 -32 V
366 -39 V
418 -42 V
488 -49 V
2778 0 V
0 3344 V
2415 0 V
0 -3999 V
2195 0 V
1.000 UP
1.000 UL
LT1
LTb
4494 6615 M
[ [(Helvetica) 140.0 0.0 true true 0 (L1d solution sans RSP)]
] -46.7 MRshow
LT1
1183 1296 Pls
1597 1262 Pls
2051 1228 Pls
2546 1202 Pls
3085 1180 Pls
3662 1183 Pls
4280 1228 Pls
5023 1625 Pls
5456 6490 Pls
5474 3994 Pls
5488 3754 Pls
5501 3825 Pls
5514 3895 Pls
5527 3888 Pls
5540 3835 Pls
5553 3768 Pls
5566 3685 Pls
5579 3612 Pls
5591 3567 Pls
5603 3602 Pls
5616 3824 Pls
5629 4137 Pls
5644 4333 Pls
5659 4417 Pls
5674 4462 Pls
5690 4503 Pls
5705 4518 Pls
5721 4535 Pls
5737 4555 Pls
5752 4588 Pls
5768 4609 Pls
5784 4645 Pls
5800 4671 Pls
5817 4696 Pls
5833 4723 Pls
5849 4740 Pls
5866 4751 Pls
5882 4756 Pls
5899 4758 Pls
5915 4756 Pls
5932 4753 Pls
5948 4749 Pls
5965 4746 Pls
5981 4743 Pls
5997 4740 Pls
6014 4737 Pls
6030 4739 Pls
6046 4731 Pls
6063 4738 Pls
6079 4740 Pls
6096 4742 Pls
6112 4744 Pls
6128 4745 Pls
6145 4747 Pls
6161 4748 Pls
6178 4747 Pls
6194 4752 Pls
6210 4752 Pls
6227 4755 Pls
6243 4761 Pls
6260 4764 Pls
6276 4767 Pls
6292 4769 Pls
6309 4772 Pls
6325 4774 Pls
6342 4776 Pls
6358 4778 Pls
6375 4779 Pls
6391 4781 Pls
6408 4782 Pls
6424 4782 Pls
6441 4783 Pls
6457 4783 Pls
6474 4784 Pls
6490 4784 Pls
6506 4784 Pls
6523 4784 Pls
6539 4783 Pls
6556 4783 Pls
6572 4783 Pls
6589 4782 Pls
6605 4781 Pls
6621 4780 Pls
6638 4779 Pls
6654 4778 Pls
6671 4777 Pls
6687 4779 Pls
6703 4782 Pls
6720 4779 Pls
6736 4772 Pls
6753 4772 Pls
6769 4770 Pls
6785 4769 Pls
6802 4768 Pls
6818 4769 Pls
6834 4771 Pls
6851 4768 Pls
6867 4760 Pls
6883 4760 Pls
6899 4758 Pls
6916 4758 Pls
6932 4761 Pls
6948 4758 Pls
6964 4751 Pls
6981 4750 Pls
6997 4749 Pls
7013 4752 Pls
7029 4755 Pls
7045 4741 Pls
7062 4743 Pls
7078 4741 Pls
7094 4743 Pls
7110 4745 Pls
7126 4731 Pls
7142 4732 Pls
7158 4731 Pls
7175 4739 Pls
7191 4728 Pls
7207 4723 Pls
7223 4724 Pls
7239 4733 Pls
7255 4723 Pls
7271 4718 Pls
7287 4719 Pls
7303 4722 Pls
7319 4719 Pls
7335 4710 Pls
7351 4710 Pls
7367 4718 Pls
7383 4708 Pls
7399 4703 Pls
7415 4703 Pls
7430 4712 Pls
7446 4702 Pls
7462 4697 Pls
7478 4699 Pls
7494 4707 Pls
7510 4696 Pls
7526 4689 Pls
7541 4692 Pls
7557 4700 Pls
7573 4683 Pls
7589 4685 Pls
7605 4688 Pls
7620 4691 Pls
7636 4678 Pls
7652 4680 Pls
7668 4690 Pls
7683 4680 Pls
7699 4675 Pls
7715 4676 Pls
7730 4685 Pls
7746 4673 Pls
7762 4667 Pls
7777 4668 Pls
7793 4675 Pls
7809 4665 Pls
7824 4661 Pls
7840 4666 Pls
7856 4671 Pls
7871 4658 Pls
7887 4659 Pls
7902 4664 Pls
7918 4683 Pls
7933 4676 Pls
7949 4580 Pls
7970 3551 Pls
8018 794 Pls
8096 477 Pls
8184 475 Pls
8274 475 Pls
8364 475 Pls
8453 475 Pls
8543 475 Pls
8632 475 Pls
8722 475 Pls
8812 475 Pls
8901 475 Pls
8991 475 Pls
9080 475 Pls
9170 475 Pls
9260 475 Pls
9349 475 Pls
9439 475 Pls
9528 475 Pls
9618 475 Pls
9708 475 Pls
9797 475 Pls
4777 6615 Pls
1.000 UP
1.000 UL
LT2
LTb
4494 6475 M
[ [(Helvetica) 140.0 0.0 true true 0 (L1d solution with RSP_dt = 5 microseconds)]
] -46.7 MRshow
LT2
945 1319 Crs
1338 1283 Crs
1767 1249 Crs
2236 1215 Crs
2744 1193 Crs
3287 1171 Crs
3851 1173 Crs
4421 1178 Crs
4979 1132 Crs
5257 4472 Crs
5273 4472 Crs
5289 4471 Crs
5304 4472 Crs
5320 4472 Crs
5335 4475 Crs
5351 4480 Crs
5367 4797 Crs
5384 4900 Crs
5400 4411 Crs
5416 4398 Crs
5431 4392 Crs
5446 4369 Crs
5461 4350 Crs
5476 4327 Crs
5491 4315 Crs
5506 4314 Crs
5521 4319 Crs
5536 4322 Crs
5551 4326 Crs
5566 4330 Crs
5582 4335 Crs
5597 4342 Crs
5612 4362 Crs
5627 4380 Crs
5642 4400 Crs
5658 4425 Crs
5673 4445 Crs
5688 4462 Crs
5704 4467 Crs
5720 4491 Crs
5735 4491 Crs
5751 4506 Crs
5767 4511 Crs
5782 4513 Crs
5798 4525 Crs
5814 4520 Crs
5830 4537 Crs
5845 4536 Crs
5861 4536 Crs
5877 4546 Crs
5893 4541 Crs
5909 4556 Crs
5925 4555 Crs
5941 4554 Crs
5956 4563 Crs
5972 4555 Crs
5988 4569 Crs
6004 4566 Crs
6020 4565 Crs
6036 4571 Crs
6052 4564 Crs
6068 4580 Crs
6084 4576 Crs
6100 4569 Crs
6116 4583 Crs
6132 4580 Crs
6148 4573 Crs
6164 4586 Crs
6180 4583 Crs
6196 4574 Crs
6212 4586 Crs
6228 4582 Crs
6244 4573 Crs
6260 4585 Crs
6276 4580 Crs
6292 4571 Crs
6308 4583 Crs
6323 4578 Crs
6339 4569 Crs
6355 4583 Crs
6371 4576 Crs
6387 4568 Crs
6403 4583 Crs
6419 4574 Crs
6435 4573 Crs
6451 4569 Crs
6467 4575 Crs
6483 4571 Crs
6499 4562 Crs
6515 4577 Crs
6531 4570 Crs
6547 4568 Crs
6563 4559 Crs
6578 4573 Crs
6594 4566 Crs
6610 4565 Crs
6626 4556 Crs
6642 4570 Crs
6658 4563 Crs
6674 4561 Crs
6690 4552 Crs
6706 4567 Crs
6722 4561 Crs
6737 4557 Crs
6753 4556 Crs
6769 4553 Crs
6785 4561 Crs
6801 4555 Crs
6817 4554 Crs
6833 4544 Crs
6848 4559 Crs
6864 4552 Crs
6880 4549 Crs
6896 4540 Crs
6912 4554 Crs
6928 4546 Crs
6943 4544 Crs
6959 4534 Crs
6975 4548 Crs
6991 4541 Crs
7007 4538 Crs
7022 4529 Crs
7038 4532 Crs
7054 4535 Crs
7070 4528 Crs
7085 4525 Crs
7101 4514 Crs
7117 4529 Crs
7133 4523 Crs
7148 4518 Crs
7164 4516 Crs
7180 4513 Crs
7195 4521 Crs
7211 4514 Crs
7227 4512 Crs
7242 4508 Crs
7258 4515 Crs
7274 4508 Crs
7289 4506 Crs
7305 4502 Crs
7321 4509 Crs
7336 4503 Crs
7352 4502 Crs
7367 4499 Crs
7383 4508 Crs
7399 4503 Crs
7414 4501 Crs
7430 4499 Crs
7445 4507 Crs
7461 4502 Crs
7477 4499 Crs
7492 4490 Crs
7508 4505 Crs
7523 4499 Crs
7539 4496 Crs
7554 4487 Crs
7570 4502 Crs
7586 4495 Crs
7601 4494 Crs
7617 4484 Crs
7632 4500 Crs
7648 4504 Crs
7663 4509 Crs
7679 4414 Crs
7701 3399 Crs
7749 768 Crs
7827 477 Crs
7916 475 Crs
8005 475 Crs
8095 475 Crs
8184 475 Crs
8274 475 Crs
8364 475 Crs
8453 475 Crs
8543 475 Crs
8632 475 Crs
8722 475 Crs
8812 475 Crs
8901 475 Crs
8991 475 Crs
9080 475 Crs
9170 475 Crs
9260 475 Crs
9349 475 Crs
9439 475 Crs
9528 475 Crs
9618 475 Crs
9708 475 Crs
9797 475 Crs
4777 6475 Crs
1.000 UL
LTb
882 420 M
8960 0 V
0 6468 V
-8960 0 V
882 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial Helvetica
