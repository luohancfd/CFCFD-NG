%!PS-Adobe-2.0 EPSF-2.0
%%Title: he_pressure_detail.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Dec 20 10:51:39 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 553 402
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
630 420 M
9212 0 V
1.000 UL
LTb
630 420 M
63 0 V
9149 0 R
-63 0 V
stroke
546 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 1714 M
9212 0 V
1.000 UL
LTb
630 1714 M
63 0 V
9149 0 R
-63 0 V
stroke
546 1714 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 3007 M
9212 0 V
1.000 UL
LTb
630 3007 M
63 0 V
9149 0 R
-63 0 V
stroke
546 3007 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 4301 M
9212 0 V
1.000 UL
LTb
630 4301 M
63 0 V
9149 0 R
-63 0 V
stroke
546 4301 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 5594 M
9212 0 V
1.000 UL
LTb
630 5594 M
63 0 V
9149 0 R
-63 0 V
stroke
546 5594 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 6888 M
9212 0 V
1.000 UL
LTb
630 6888 M
63 0 V
9149 0 R
-63 0 V
stroke
546 6888 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
630 420 M
0 6468 V
1.000 UL
LTb
630 420 M
0 63 V
0 6405 R
0 -63 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2472 420 M
0 6468 V
1.000 UL
LTb
2472 420 M
0 63 V
0 6405 R
0 -63 V
stroke
2472 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4315 420 M
0 6468 V
1.000 UL
LTb
4315 420 M
0 63 V
0 6405 R
0 -63 V
stroke
4315 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6157 420 M
0 5985 V
0 420 R
0 63 V
1.000 UL
LTb
6157 420 M
0 63 V
0 6405 R
0 -63 V
stroke
6157 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8000 420 M
0 5985 V
0 420 R
0 63 V
1.000 UL
LTb
8000 420 M
0 63 V
0 6405 R
0 -63 V
stroke
8000 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
9842 420 M
0 6468 V
1.000 UL
LTb
9842 420 M
0 63 V
0 6405 R
0 -63 V
stroke
9842 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.95)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
630 420 M
9212 0 V
0 6468 V
-9212 0 V
630 420 L
LTb
140 3654 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Arial) 160.0 0.0 true true 0 (Static pressure, p \(kPa\))]
] -53.3 MCshow
grestore
LTb
5236 70 M
[ [(Arial) 160.0 0.0 true true 0 (Axial location, x \(m\))]
] -53.3 MCshow
1.000 UP
3.000 UL
LT0
LTb
9191 6755 M
[ [(Helvetica) 140.0 0.0 true true 0 (exact solution)]
] -46.7 MRshow
LT0
9275 6755 M
399 0 V
630 3973 M
939 3582 L
376 -425 V
429 -424 V
502 -424 V
0 1 V
2856 0 V
2483 0 V
0 -1877 V
2257 0 V
1.000 UP
1.000 UL
LT1
LTb
9191 6615 M
[ [(Helvetica) 140.0 0.0 true true 0 (L1d solution sans RSP)]
] -46.7 MRshow
LT1
939 3809 Pls
1365 3378 Pls
1831 2987 Pls
2341 2678 Pls
2895 2418 Pls
3489 2287 Pls
4124 2216 Pls
4887 2349 Pls
5333 2317 Pls
5352 2314 Pls
5365 2305 Pls
5379 2314 Pls
5392 2315 Pls
5406 2315 Pls
5419 2316 Pls
5433 2316 Pls
5446 2316 Pls
5459 2312 Pls
5471 2311 Pls
5484 2311 Pls
5497 2318 Pls
5511 2325 Pls
5526 2323 Pls
5541 2318 Pls
5557 2319 Pls
5573 2319 Pls
5589 2319 Pls
5605 2319 Pls
5621 2319 Pls
5637 2320 Pls
5654 2320 Pls
5670 2320 Pls
5687 2321 Pls
5703 2321 Pls
5720 2322 Pls
5737 2322 Pls
5754 2322 Pls
5771 2322 Pls
5788 2322 Pls
5805 2323 Pls
5822 2323 Pls
5839 2324 Pls
5855 2324 Pls
5872 2325 Pls
5889 2325 Pls
5906 2325 Pls
5923 2325 Pls
5940 2325 Pls
5957 2326 Pls
5973 2326 Pls
5990 2327 Pls
6007 2327 Pls
6024 2327 Pls
6041 2328 Pls
6058 2328 Pls
6074 2329 Pls
6091 2329 Pls
6108 2330 Pls
6125 2330 Pls
6142 2330 Pls
6159 2330 Pls
6176 2330 Pls
6193 2331 Pls
6210 2331 Pls
6226 2332 Pls
6243 2332 Pls
6260 2333 Pls
6277 2333 Pls
6294 2334 Pls
6311 2334 Pls
6328 2335 Pls
6345 2335 Pls
6362 2335 Pls
6379 2336 Pls
6396 2336 Pls
6413 2337 Pls
6430 2337 Pls
6446 2338 Pls
6463 2338 Pls
6480 2339 Pls
6497 2339 Pls
6514 2340 Pls
6531 2340 Pls
6548 2340 Pls
6565 2340 Pls
6581 2341 Pls
6598 2341 Pls
6615 2342 Pls
6632 2342 Pls
6649 2342 Pls
6666 2343 Pls
6683 2344 Pls
6699 2344 Pls
6716 2345 Pls
6733 2345 Pls
6750 2346 Pls
6766 2346 Pls
6783 2346 Pls
6800 2347 Pls
6817 2347 Pls
6833 2347 Pls
6850 2348 Pls
6867 2349 Pls
6884 2349 Pls
6900 2350 Pls
6917 2351 Pls
6934 2352 Pls
6950 2353 Pls
6967 2353 Pls
6983 2354 Pls
7000 2354 Pls
7017 2354 Pls
7033 2354 Pls
7050 2354 Pls
7066 2355 Pls
7083 2355 Pls
7100 2356 Pls
7116 2357 Pls
7133 2358 Pls
7149 2359 Pls
7166 2360 Pls
7182 2361 Pls
7199 2362 Pls
7215 2363 Pls
7231 2364 Pls
7248 2364 Pls
7264 2363 Pls
7281 2363 Pls
7297 2364 Pls
7314 2365 Pls
7330 2365 Pls
7346 2367 Pls
7363 2368 Pls
7379 2369 Pls
7395 2370 Pls
7412 2372 Pls
7428 2373 Pls
7444 2373 Pls
7460 2372 Pls
7477 2372 Pls
7493 2372 Pls
7509 2372 Pls
7526 2373 Pls
7542 2374 Pls
7558 2376 Pls
7574 2377 Pls
7590 2379 Pls
7607 2381 Pls
7623 2383 Pls
7639 2384 Pls
7655 2385 Pls
7671 2386 Pls
7687 2385 Pls
7703 2383 Pls
7719 2383 Pls
7735 2383 Pls
7751 2383 Pls
7768 2384 Pls
7784 2386 Pls
7800 2390 Pls
7816 2391 Pls
7832 2390 Pls
7848 2395 Pls
7864 2420 Pls
7879 2433 Pls
7895 2285 Pls
7918 1266 Pls
7966 470 Pls
8047 433 Pls
8138 433 Pls
8230 433 Pls
8322 433 Pls
8414 433 Pls
8506 433 Pls
8598 433 Pls
8691 433 Pls
8783 433 Pls
8875 433 Pls
8967 433 Pls
9059 433 Pls
9151 433 Pls
9243 433 Pls
9335 433 Pls
9427 433 Pls
9520 433 Pls
9612 433 Pls
9704 433 Pls
9796 433 Pls
9474 6615 Pls
1.000 UP
1.000 UL
LT2
LTb
9191 6475 M
[ [(Helvetica) 140.0 0.0 true true 0 (L1d solution with RSP_dt = 5 microseconds)]
] -46.7 MRshow
LT2
694 4123 Crs
1099 3651 Crs
1540 3237 Crs
2022 2864 Crs
2544 2615 Crs
3103 2396 Crs
3682 2362 Crs
4269 2310 Crs
4843 2301 Crs
5128 2304 Crs
5144 2303 Crs
5160 2303 Crs
5176 2303 Crs
5193 2303 Crs
5209 2303 Crs
5225 2303 Crs
5241 2303 Crs
5259 2305 Crs
5275 2303 Crs
5291 2303 Crs
5307 2303 Crs
5323 2303 Crs
5338 2303 Crs
5354 2303 Crs
5369 2303 Crs
5384 2303 Crs
5400 2303 Crs
5415 2303 Crs
5431 2303 Crs
5446 2303 Crs
5462 2303 Crs
5477 2303 Crs
5493 2303 Crs
5508 2303 Crs
5524 2303 Crs
5540 2304 Crs
5556 2304 Crs
5572 2303 Crs
5588 2303 Crs
5604 2303 Crs
5620 2303 Crs
5636 2303 Crs
5652 2303 Crs
5668 2303 Crs
5684 2304 Crs
5701 2304 Crs
5717 2304 Crs
5733 2304 Crs
5749 2304 Crs
5766 2304 Crs
5782 2304 Crs
5798 2304 Crs
5815 2304 Crs
5831 2304 Crs
5847 2304 Crs
5864 2304 Crs
5880 2304 Crs
5896 2304 Crs
5913 2304 Crs
5929 2304 Crs
5945 2304 Crs
5962 2304 Crs
5978 2304 Crs
5995 2304 Crs
6011 2304 Crs
6027 2304 Crs
6044 2304 Crs
6060 2304 Crs
6077 2304 Crs
6093 2304 Crs
6110 2304 Crs
6126 2304 Crs
6142 2304 Crs
6159 2304 Crs
6175 2304 Crs
6192 2304 Crs
6208 2304 Crs
6225 2304 Crs
6241 2304 Crs
6257 2304 Crs
6274 2304 Crs
6290 2304 Crs
6307 2304 Crs
6323 2304 Crs
6339 2304 Crs
6356 2304 Crs
6372 2305 Crs
6389 2305 Crs
6405 2305 Crs
6421 2305 Crs
6438 2305 Crs
6454 2305 Crs
6470 2305 Crs
6487 2305 Crs
6503 2305 Crs
6519 2305 Crs
6536 2305 Crs
6552 2305 Crs
6568 2305 Crs
6585 2305 Crs
6601 2305 Crs
6617 2306 Crs
6634 2306 Crs
6650 2306 Crs
6666 2306 Crs
6683 2306 Crs
6699 2306 Crs
6715 2306 Crs
6732 2306 Crs
6748 2306 Crs
6764 2306 Crs
6781 2306 Crs
6797 2306 Crs
6813 2306 Crs
6829 2307 Crs
6846 2307 Crs
6862 2308 Crs
6878 2308 Crs
6894 2309 Crs
6911 2309 Crs
6927 2309 Crs
6943 2309 Crs
6959 2309 Crs
6975 2308 Crs
6992 2308 Crs
7008 2307 Crs
7024 2308 Crs
7040 2308 Crs
7056 2308 Crs
7073 2309 Crs
7089 2310 Crs
7105 2311 Crs
7121 2312 Crs
7137 2312 Crs
7153 2312 Crs
7169 2312 Crs
7185 2312 Crs
7201 2311 Crs
7217 2310 Crs
7234 2310 Crs
7250 2310 Crs
7266 2310 Crs
7282 2310 Crs
7298 2312 Crs
7314 2313 Crs
7330 2315 Crs
7346 2316 Crs
7362 2316 Crs
7378 2317 Crs
7394 2316 Crs
7410 2315 Crs
7426 2315 Crs
7442 2315 Crs
7458 2315 Crs
7474 2315 Crs
7490 2313 Crs
7506 2313 Crs
7522 2314 Crs
7538 2315 Crs
7554 2313 Crs
7570 2315 Crs
7586 2334 Crs
7602 2347 Crs
7618 2208 Crs
7641 1215 Crs
7690 467 Crs
7770 433 Crs
7861 433 Crs
7954 433 Crs
8046 433 Crs
8138 433 Crs
8230 433 Crs
8322 433 Crs
8414 433 Crs
8506 433 Crs
8598 433 Crs
8691 433 Crs
8783 433 Crs
8875 433 Crs
8967 433 Crs
9059 433 Crs
9151 433 Crs
9243 433 Crs
9335 433 Crs
9427 433 Crs
9520 433 Crs
9612 433 Crs
9704 433 Crs
9796 433 Crs
9474 6475 Crs
1.000 UL
LTb
630 420 M
9212 0 V
0 6468 V
-9212 0 V
630 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial Helvetica
