#+Author: Rowan J. Gollan
#+Date: 13-Jan-2015
#+OPTIONS: ^:{}

* Viscosity computed with CEA curve form
** Description
This viscosity calculation makes use of the form used in the CEA program [cite:gordon-1994-CEA, cite:mcbride-1996-CEA].
The viscosity data for many species have been fit using least-squares to the equation
\[ \ln(\eta) = A \ln(T) + \frac{B}{T} + \frac{C}{T^2} + D \]
This expression gives the viscosity in \mu P.
Given that 1 P = 0.1 kg/(m.s), the result of this
expression is converted to S.I. units by multiplying by 1.0e-7.
The implementation of this expression is here: [[file:../cea_viscosity.d::41]]
The coefficients A, B, C, and D are taken from the transport
property data that accompanies the CEA program, specifically
from the file =trans.inp= ([[file:../../../../extern/cea2/trans.inp]]).

Note that Gordon and McBride use the symbol \eta for viscosity.
Our local preference is to use \mu.
I will use \mu from hereon in.

I have always just cited the CEA program manual (cite:gordon-1994-CEA) for
the form of this equation.
However, this expression can be traced back further in the literature.
Gordon and co-workers cite the expression in an earlier manual
they wrote about CEA that focussed on the transport properties
calculation [cite:gordon-1984-transport], in which they
cite Maitland and Smith (1972) [cite:maitland-1972-critical].
From Maitland and Smith, the expression can be traced back to 
Dawe and Smith (1970) [cite:dawe-1970-viscosities].
Interestingly, in Dawe and Smith's original work, the expression
uses log to base 10 rather than base e.
It seems that the change to base e was made in Maitland and Smith's
work but no comment is given as to why.

** Example calculations
This example is the same as the unit test that is exercised as
part of the module =cea_viscosity.d=.

*Evaluate the viscosity of N_{2} at T = 900.0 K.*

The coefficients can be taken from the CEA =trans.inp= file.
The coefficients for N2 at this temperature are (from [[file:../../../../extern/trans.inp::395]]):
\[
A = 0.62526577e0; B = -0.31779652e2; C = -0.16407983e4; D = 0.17454992e1
\]

Evaluated, this gives $$\mu = 3.8818 \times 10^{-5}$$ kg/(m.s).

*Plot the viscosity of O_{2} over the range 100K  to 16000K.*

We will write a small D program to output the viscosity of O_{2} as a function
of temperature in increments of 100K over the range 100K to 16000K.

#+BEGIN_SRC d :tangle plot_O2_visc.d
  import std.stdio;
  import std.string;
  import gasmodel;
  import cea_viscosity;
  
  void main()
  {
      // Enter parameters for O2 viscosity by hand
      double[string] params = ["T_lower":200.0, "T_upper":1000.0,
                               "A":0.60916180, "B":-0.52244847e2,
                               "C":-0.59974009e3, "D":0.20410801e1];
      CEAViscCurve[] curves;
      curves ~= CEAViscCurve(params);
      params["T_lower"] = 1000.0; params["T_upper"] = 5000.0;
      params["A"] = 0.72216486; params["B"] = 0.17550839e3;
      params["C"] = -0.57974816e05; params["D"] = 0.10901044e1;
      curves ~= CEAViscCurve(params);
      params["T_lower"] = 5000.0; params["T_upper"] = 15000.0;
      params["A"] = 0.73981127; params["B"] = 0.39194906e3;
      params["C"] = -0.37833168e+06; params["D"] = 0.90931780;
      curves ~= CEAViscCurve(params);
  
      auto o2_visc = new CEAViscosity(curves);
      auto fout = File("O2-visc.dat", "w");
      fout.writeln("# T[K]         mu[kg/(m.s)]");
      double T = 100.0;
      double Tmax = 16000.0;
      double dT = 100.0;
      auto Q = GasState(1, 1);
      while ( T <= Tmax ) {
          Q.T[0] = T;
          auto mu = o2_visc.eval(Q);
          fout.writeln(format("%12.6e  %12.6e", T, mu)); 
          T += dT;
      }
      fout.close();
  }
#+END_SRC

#+BEGIN_SRC makefile :tangle makefile
plot_O2_visc : plot_O2_visc.d ../cea_viscosity.d ../viscosity.d ../../gasmodel.d
	dmd plot_O2_visc.d ../cea_viscosity.d ../viscosity.d ../../gasmodel.d -I../ -I../../
#+END_SRC

#+BEGIN_SRC emacs-lisp :results silent
(org-babel-tangle)
#+END_SRC

#+BEGIN_SRC sh
make plot_O2_visc
./plot_O2_visc
#+END_SRC

#+BEGIN_SRC gnuplot :file O2-visc.eps
set term postscript eps enhanced 20 "Palatino"
set xlabel "T, K"
set ylabel "{/Symbol m}, kg/(m.s)"
set xrange [0:17000]
plot 'O2-visc.dat' notitle w l lw 2
#+END_SRC

#+RESULTS:
[[file:O2-visc.eps]]

#+BEGIN_SRC sh :results value file :file O2-visc.png
convert -density 150 O2-visc.eps O2-visc.png
#+END_SRC

#+RESULTS:
[[file:O2-visc.png]]





** Implementation
